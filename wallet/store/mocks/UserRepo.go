package mocks

import (
	context "context"
	"github.com/stretchr/testify/mock"
	"wallet/model"
	"wallet/store"
)

// UserRepo is an autogenerated mock type for the UserRepo type
type UserRepo struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: ctx, arg
func (_m *UserRepo) CreateUser(ctx context.Context, arg store.CreateUserParams) (model.User, error) {

	ret := _m.Called(ctx, arg)
	var r0 model.User

	if rf, ok := ret.Get(0).(func(context.Context, store.CreateUserParams) model.User); ok {
		r0 = rf(ctx, arg)
	} else {
		r0 = ret.Get(0).(model.User)
	}
	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, store.CreateUserParams) error); ok {
		r1 = rf(ctx, arg)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUserByUsername provides a mock function with given fields: ctx, username

func (_m *UserRepo) GetUserByUsername(ctx context.Context, username string) (model.User, error) {

	ret := _m.Called(ctx, username)

	var r0 model.User
	if rf, ok := ret.Get(0).(func(context.Context, string) model.User); ok {
		r0 = rf(ctx, username)
	} else {
		r0 = ret.Get(0).(model.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, username)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
